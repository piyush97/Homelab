version: "2.1"
services:
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    environment:
      - PUID=0
      - PGID=0
      - TZ=America/Toronto
    volumes:
      - /appdata/prowlarr:/config
    ports:
      - 9696:9696
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.lab`)"
      - "traefik.http.routers.prowlarr.entrypoints=web"
      
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    environment:
      - PUID=0
      - PGID=0
      - TZ=America/Toronto
    volumes:
      - /appdata/radarr:/config
      - /media/media-for-home:/movies #optional
      - /media/media-for-home:/downloads #optional
    ports:
      - 7878:7878
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.lab`)"
      - "traefik.http.routers.radarr.entrypoints=web"
      
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    environment:
      - PUID=0
      - PGID=0
      - TZ=America/Toronto
    volumes:
      - /appdata/sonarr:/config
      - /media/media-for-home:/tv #optional
      - /media/media-for-home:/downloads #optional
    ports:
      - 8989:8989
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.lab`)"
      - "traefik.http.routers.sonarr.entrypoints=web"
      
  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    restart: unless-stopped
    environment:
      - PUID=0
      - PGID=0
      - TZ=America/Toronto
    volumes:
      - /appdata/overseerr:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.overseerr.rule=Host(`overseerr.lab`)"
      - "traefik.http.routers.overseerr.entrypoints=web"
      
  autobrr:
    container_name: autobrr
    image: ghcr.io/autobrr/autobrr:latest
    restart: unless-stopped
    user: 0:0
    environment:
      - TZ=${TZ}
    volumes:
      - /appdata/autobrr:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.autobrr.rule=Host(`autobrr.lab`)"
      - "traefik.http.routers.autobrr.entrypoints=web"
      
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Toronto
    volumes:
      - /appdata/sabnzbd:/config
      - /media/media-for-home/downloads:/downloads #optional
      - /media/media-for-home/incomplete-downloads:/incomplete-downloads #optional
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sabnzbd.rule=Host(`sabnzbd.lab`)"
      - "traefik.http.routers.sabnzbd.entrypoints=web"
      
  pyload-ng:
    image: lscr.io/linuxserver/pyload-ng:latest
    container_name: pyload-ng
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Toronto
    volumes:
      - /appdata/pyload/config:/config
      - /media/media-for-home/downloads:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pyload.rule=Host(`pyload.lab`)"
      - "traefik.http.routers.pyload.entrypoints=web"
      
  filebrowser:
    image: hurlenko/filebrowser
    user: "${UID}:${GID}"
    ports:
      - 443:8080
    volumes:
      - /media:/data
      - /appdata/filebrowser:/config
    environment:
      - FB_BASEURL=/filebrowser
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.filebrowser.rule=Host(`filebrowser.lab`)"
      - "traefik.http.routers.filebrowser.entrypoints=web"
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/config.json
    command: --interval 30

  # reverse-proxy:
  #   image: traefik:latest
  #   restart: unless-stopped

  #   command: --api.insecure=true --providers.docker  --entrypoints.web.address=:80 --providers.docker.exposedbydefault=false --log.level=DEBUG
  #   ports:
  #     - "80:80"
  #     - "8082:8080"

  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /root/traefik.toml:/config/traefik.toml
